type Place {
  _id: ID!
  owner: User
  desciption: String
  mainPhoto: String
  photos: [String]
  priceByNight: Float
  reviews: [Review]
}

input inputPlaceType {
  type: String!
  owner: ID!
  desciption: String!
  mainPhoto: String!
  photos: [String]!
  priceByNight: Float!
}

type Mutation {
  createPlace(body: inputPlaceType!): Place
  updatePlace(_id: ID!, body: inputPlaceType!): Place
  deletePlace(_id: ID!): Place
}

type PaginationType {
  page: Int
  pages: Int
  count: Int
}

type PlaceEdgesType {
  edges: [Place]
  pagination: PaginationType
}

type listArgsType {
  page: Int
  limit: Int
  sortBy: String
  sortOrder: String
}

type searchArgsType {
  limit: Int
  query: String!
  fields: String!
}

type Query {
  readPlace(_id: ID!): Place
  listPlace(page: Int, limit: Int, sortBy: String, sortOrder: String): PlaceEdgesType
  searchPlace(limit: Int, query: String!, fields: String!): [Place]
}
